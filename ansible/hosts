# This is the default ansible 'hosts' file.
#
# It should live in /etc/ansible/hosts
#
#   - Comments begin with the '#' character
#   - Blank lines are ignored
#   - Groups of hosts are delimited by [header] elements
#   - You can enter hostnames or ip addresses
#   - A hostname/ip can be a member of multiple groups

# ===================================================================
# ENTERPRISE HOMELAB INVENTORY - CROSS-PLATFORM AUTOMATION
# ===================================================================
# 
# PURPOSE: Unified management of Linux and Windows infrastructure
# ARCHITECTURE: 6 systems across 6 VLANs with cross-platform support
# AUTHENTICATION: 
#   - Linux: SSH with ansible service account
#   - Windows: WinRM with ansible local user account
# 
# AUTOMATION CAPABILITIES:
#   - Cross-platform package management
#   - Service management across all OS types
#   - Configuration deployment to mixed environments
#   - Security automation and compliance checking
# ===================================================================

# inventory.ini

[all_in_one]
192.168.20.2   # Wazuh SIEM (Rocky Linux 9.6)
192.168.60.2   # Grafana/Prometheus (Ubuntu 24.04)
192.168.10.4   # TCM Ubuntu (Ubuntu 24.04)
192.168.10.2   # Ansible Controller (Ubuntu 24.04)

[infrastructure] # Managed systems only (excludes controller)
192.168.20.2
192.168.60.2
192.168.10.4

[controller]
192.168.10.2 
# localhost ansible_connection=local

[wazuh]
192.168.20.2

[tcm]
192.168.10.4

[grafana]
192.168.60.2 

[ubuntu]
192.168.60.2 # grafana/prometheus
192.168.10.4 # tcm-ubuntu
192.168.10.2 # ansible-controller

[rocky]
192.168.20.2 # wazuh-siem

# ===================================================================
# WINDOWS INFRASTRUCTURE
# ===================================================================
# 
# Windows systems managed via WinRM protocol
# Authentication: Local ansible user with administrator privileges
# Configuration: Group variables in group_vars/windows.yml
# 
# Requirements:
#   - WinRM service enabled and configured
#   - Windows Firewall rule for port 5985
#   - ansible user account with admin privileges
#   - PowerShell execution policy configured
# ===================================================================

[windows]
192.168.10.3   # Windows 11 Pro

# ===================================================================
# COMBINED GROUPS FOR CROSS-PLATFORM AUTOMATION
# ===================================================================

# All systems group (Linux + Windows)
[all_systems:children]
all_in_one
windows

# Linux-only systems
[linux:children]
all_in_one

# Operating system specific groups
[linux_ubuntu:children]
ubuntu

[linux_rocky:children]
rocky

# ===================================================================
# EXAMPLE GROUP USAGE:
# 
# ansible all_systems -m ping          # Test all systems (requires cross-platform playbook)
# ansible linux -m ping                # Test only Linux systems
# ansible windows -m win_ping          # Test only Windows systems
# ansible ubuntu -m apt -a "name=curl state=present"    # Ubuntu package management
# ansible rocky -m dnf -a "name=curl state=present"     # Rocky Linux package management
# ansible windows -m win_chocolatey -a "name=curl state=present"  # Windows package management
# 
# Cross-platform automation examples:
# ansible-playbook playbooks/ping_all_systems.yml       # Cross-platform connectivity test
# ansible-playbook playbooks/system_info_cross_platform.yml  # Mixed environment info gathering
# ===================================================================

# Ungrouped hosts, specify before any group headers:

## green.example.com
## blue.example.com
## 192.168.100.1
## 192.168.100.10

# Ex 2: A collection of hosts belonging to the 'webservers' group:

## [webservers]
## alpha.example.org
## beta.example.org
## 192.168.1.100
## 192.168.1.110

# If you have multiple hosts following a pattern, you can specify
# them like this:

## www[001:006].example.com

# You can also use ranges for multiple hosts: 

## db-[99:101]-node.example.com

# Ex 3: A collection of database servers in the 'dbservers' group:

## [dbservers]
##
## db01.intranet.mydomain.net
## db02.intranet.mydomain.net
## 10.25.1.56
## 10.25.1.57

# Ex4: Multiple hosts arranged into groups such as 'Debian' and 'openSUSE':

## [Debian]
## alpha.example.org
## beta.example.org

## [openSUSE]
## green.example.com
## blue.example.com