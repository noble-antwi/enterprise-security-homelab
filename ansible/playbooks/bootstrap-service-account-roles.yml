---
# ===================================================================
# MASTER PLAYBOOK - ANSIBLE SERVICE ACCOUNT BOOTSTRAP (ROLES VERSION)
# ===================================================================
# 
# PURPOSE: Orchestrates multiple roles to create complete service account setup
# USAGE: ansible-playbook bootstrap-service-account-roles.yml --ask-become-pass
# 
# ROLES INCLUDED:
# - system-updates: Updates package caches
# - service-account: Creates and configures ansible service account  
# - common-tools: Installs automation and development tools
# 
# BENEFITS OF ROLES:
# - Modular and reusable components
# - Clear separation of concerns
# - Easy to maintain and extend
# - Professional enterprise structure
# ===================================================================

- name: Bootstrap Ansible Service Account Using Roles
  hosts: all_in_one
  become: true
  gather_facts: true
  
  # ===============================================================
  # PLAYBOOK VARIABLES
  # ===============================================================
  vars:
    # Override default service account name if needed
    # service_account_user: ansible  # (uses role default)
    
    # Override SSH key location if needed  
    # service_account_ssh_key: "{{ lookup('file', '~/.ssh/custom-key.pub') }}"
    
    # Enable additional tool categories
    install_development_tools: true
    install_network_tools: false
    install_security_tools: false

  # ===============================================================
  # PRE-TASKS
  # ===============================================================
  pre_tasks:
    - name: Display playbook execution info
      ansible.builtin.debug:
        msg: |
          ========================================
          üöÄ ANSIBLE SERVICE ACCOUNT BOOTSTRAP
          ========================================
          
          üìã EXECUTION DETAILS:
          ‚Ä¢ Playbook: Role-based service account setup
          ‚Ä¢ Target Systems: {{ groups['all_in_one'] | length }} systems
          ‚Ä¢ Service Account: {{ service_account_user | default('ansible') }}
          ‚Ä¢ Roles: system-updates, service-account, common-tools
          
          üñ•Ô∏è TARGET SYSTEMS:
          {% for host in groups['all_in_one'] %}
          ‚Ä¢ {{ host }}
          {% endfor %}
          
          ========================================
      tags: always
      run_once: true

  # ===============================================================
  # ROLE EXECUTION
  # ===============================================================
  roles:
    # Step 1: Update system package caches
    - role: system-updates
      tags: updates
      
    # Step 2: Create and configure service account
    - role: service-account
      tags: service_account
      
    # Step 3: Install common automation tools
    - role: common-tools
      tags: tools

  # ===============================================================
  # POST-TASKS
  # ===============================================================
  post_tasks:
    - name: Generate comprehensive completion report
      ansible.builtin.debug:
        msg: |
          ========================================
          ‚úÖ SERVICE ACCOUNT BOOTSTRAP COMPLETE
          ========================================
          
          üéØ COMPLETED TASKS:
          ‚Ä¢ ‚úÖ System Updates: Package caches updated
          ‚Ä¢ ‚úÖ Service Account: {{ service_account_user | default('ansible') }} user created
          ‚Ä¢ ‚úÖ SSH Access: Configured with ansible-homelab-key
          ‚Ä¢ ‚úÖ Sudo Access: Passwordless (NOPASSWD: ALL)
          ‚Ä¢ ‚úÖ Common Tools: Automation tools installed
          
          üñ•Ô∏è SYSTEMS CONFIGURED:
          {% for host in groups['all_in_one'] %}
          ‚Ä¢ {{ host }} ‚úÖ
          {% endfor %}
          
           NEXT STEPS:
          1. Update ansible.cfg:
             remote_user = {{ service_account_user | default('ansible') }}
             ask_sudo_pass = false
          
          2. Test new configuration:
             ansible all_in_one -m ping
          
          3. Run verification:
             ansible-playbook verify-service-account-roles.yml
          
          ========================================
          üéâ READY FOR ENTERPRISE AUTOMATION!
          ========================================
      tags: always
      run_once: true

# ===================================================================
# ROLE BENEFITS ACHIEVED:
# 
# ‚úÖ MODULARITY: Each role has single responsibility
# ‚úÖ REUSABILITY: Roles can be used in other playbooks
# ‚úÖ MAINTAINABILITY: Easy to update individual components
# ‚úÖ SCALABILITY: Easy to add new roles or modify existing ones
# ‚úÖ ENTERPRISE READY: Professional structure and practices
# 
# ROLE STRUCTURE:
# roles/
# ‚îú‚îÄ‚îÄ system-updates/     # Package cache management
# ‚îú‚îÄ‚îÄ service-account/    # User and access management  
# ‚îî‚îÄ‚îÄ common-tools/       # Tool installation and setup
# ===================================================================
